#include "../header-vmdl/patterns.vmdh"

#include "../header-vmdl/externc.vmdh"

(vmInstruction, needContext, triggerGC, tailCall)
mul : (JSValue, JSValue) -> JSValue

mul (v1, v2) {
  top: match (v1, v2) {
    case (Fixnum v1 && Fixnum v2) {
      cint n1 = FixnumToCint(v1);
      cint n2 = FixnumToCint(v2);
      if (Half_fixnum_range(n1) && Half_fixnum_range(n2)) {
        cint p = n1 * n2;
        return CintToFixnum(p);
      } else {
        cdouble d = CintToCdouble(n1 * n2);
        return CdoubleToNumber(d);
      }
    }
    case (number v1 && number v2) {
      cdouble x1 = toCdouble(v1);
      cdouble x2 = toCdouble(v2);
      return CdoubleToNumber(x1 * x2);
    }
    case (number v1) {
      Number u2 = toNumber(v2);
      rematch top(v1, u2);
    }
    case (number v2) {
      Number u1 = toNumber(v1);
      rematch top(u1, v2);
    }
    case (true) {
      Number u1 = toNumber(v1);
      Number u2 = toNumber(v2);
      rematch top(u1, u2);
    }
  }
}