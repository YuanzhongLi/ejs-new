\inst getglobal (Register dst, Value s)

\when s:string \{
/*
   getglobal dst reg
     dst : destination register
     reg : register that has a pointer to a string object
   $dst = property value for the string in the global object
 */
  JSValue ret;
#ifdef DEBUG_GETPROP_VALUE
  StringCell *str = jsv_to_normal_string(s);
  if (trace_flag)
    printf("getglobal: %s\n", str->value);
#endif /* DEBUG_GETPROP_VALUE */
  ret = get_prop(context->global, s);
  if (ret == JS_EMPTY)
    LOG_EXIT("GETGLOBAL: %s not found\n", string_to_cstr(s));
  dst = ret;
\}

\otherwise \{
  LOG_EXIT("GETGLOBAL with non-stirng variable name\n");
/* Local Variables:      */
/* mode: c               */
/* c-basic-offset: 2     */
/* indent-tabs-mode: nil */
/* End:                  */
\}
